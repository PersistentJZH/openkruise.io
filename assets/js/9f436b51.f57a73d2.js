"use strict";(self.webpackChunkopenkruise_io=self.webpackChunkopenkruise_io||[]).push([[9e3],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),k=l,m=d["".concat(s,".").concat(k)]||d[k]||c[k]||r;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1990:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={title:"Kubectl Plugin"},s=void 0,u={unversionedId:"cli-tool/kubectl-plugin",id:"version-v1.4/cli-tool/kubectl-plugin",title:"Kubectl Plugin",description:"Kruise-tools provides commandline tools for kruise features, such as kubectl-kruise, which is a standard plugin of kubectl.",source:"@site/versioned_docs/version-v1.4/cli-tool/kubectl-plugin.md",sourceDirName:"cli-tool",slug:"/cli-tool/kubectl-plugin",permalink:"/docs/v1.4/cli-tool/kubectl-plugin",draft:!1,editUrl:"https://github.com/openkruise/openkruise.io/edit/master/docs/cli-tool/kubectl-plugin.md",tags:[],version:"v1.4",lastUpdatedBy:"berg",lastUpdatedAt:1680507223,formattedLastUpdatedAt:"4/3/2023",frontMatter:{title:"Kubectl Plugin"},sidebar:"docs",previous:{title:"Other languages",permalink:"/docs/v1.4/developer-manuals/other-languages"},next:{title:"Kustomize ResourceDistribution Generator",permalink:"/docs/v1.4/cli-tool/kustomize-plugin"}},p={},c=[{value:"Install",id:"install",level:2},{value:"Install via Krew",id:"install-via-krew",level:3},{value:"Install manually",id:"install-manually",level:3},{value:"Upgrade",id:"upgrade",level:2},{value:"Upgrade via Krew",id:"upgrade-via-krew",level:3},{value:"Upgrade manually",id:"upgrade-manually",level:3},{value:"Usage",id:"usage",level:2},{value:"expose",id:"expose",level:3},{value:"scale",id:"scale",level:3},{value:"rollout",id:"rollout",level:3},{value:"set",id:"set",level:3},{value:"migrate",id:"migrate",level:3},{value:"exec",id:"exec",level:3},{value:"scaledown",id:"scaledown",level:3}],d={toc:c};function k(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/openkruise/kruise-tools"},"Kruise-tools")," provides commandline tools for kruise features, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl-kruise"),", which is a standard plugin of ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl"),"."),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("h3",{id:"install-via-krew"},"Install via Krew"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://krew.sigs.k8s.io/"},"Krew")," itself is a kubectl plugin that is installed and updated via Krew (yes, Krew self-hosts).\nFirst, ",(0,r.kt)("a",{parentName:"p",href:"https://krew.sigs.k8s.io/docs/user-guide/setup/install/"},"install krew"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl krew install kruise")," to install kruise plugin via Krew.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Then you can use it with ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl-kruise")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl kruise"),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl-kruise --help\n\n# or\n$ kubectl kruise --help\n")),(0,r.kt)("h3",{id:"install-manually"},"Install manually"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You can simply download the binary from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openkruise/kruise-tools/releases"},"releases")," page. Currently ",(0,r.kt)("inlineCode",{parentName:"p"},"linux"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"darwin"),"(OS X), ",(0,r.kt)("inlineCode",{parentName:"p"},"windows")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"x86_64")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"arm64")," are provided. If you are using some other systems or architectures, you have to download the source code and execute ",(0,r.kt)("inlineCode",{parentName:"p"},"make build")," to build the binary.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Extract and move it to system PATH."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ tar xvf kubectl-kruise-darwin-amd64.tar.gz\n$ mv darwin-amd64/kubectl-kruise /usr/local/bin/\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Then you can use it with ",(0,r.kt)("inlineCode",{parentName:"li"},"kubectl-kruise")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"kubectl kruise"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl-kruise --help\n\n# or\n$ kubectl kruise --help\n")),(0,r.kt)("h2",{id:"upgrade"},"Upgrade"),(0,r.kt)("h3",{id:"upgrade-via-krew"},"Upgrade via Krew"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl krew upgrade kruise")," to upgrade kruise plugin via Krew."),(0,r.kt)("h3",{id:"upgrade-manually"},"Upgrade manually"),(0,r.kt)("p",null,"Same to install plugin manaully."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"expose"},"expose"),(0,r.kt)("p",null,"Take a workload(e.g. deployment, cloneset), service or pod and expose it as a new Kubernetes Service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl kruise expose cloneset nginx --port=80 --target-port=8000\n")),(0,r.kt)("h3",{id:"scale"},"scale"),(0,r.kt)("p",null,"Set a new size for a Deployment, ReplicaSet, CloneSet, or Advanced StatefulSet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl kruise scale --replicas=3 cloneset nginx\n")),(0,r.kt)("p",null,"It equals to ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl scale --replicas=3 cloneset nginx"),"."),(0,r.kt)("h3",{id:"rollout"},"rollout"),(0,r.kt)("p",null,"Available commands: ",(0,r.kt)("inlineCode",{parentName:"p"},"history"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pause"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"restart"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"resume"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"status"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"undo"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"approve"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl kruise rollout undo cloneset/nginx\n\n# built-in statefulsets\n$ kubectl kruise rollout status statefulsets/sts1\n\n# kruise statefulsets\n$ kubectl kruise rollout status statefulsets.apps.kruise.io/sts2\n\n# approve a kruise rollout resource named "rollout-demo" in "ns-demo" namespace\n$ kubectl-kruise rollout approve rollout-demo -n ns-demo\n')),(0,r.kt)("h3",{id:"set"},"set"),(0,r.kt)("p",null,"Available commands: ",(0,r.kt)("inlineCode",{parentName:"p"},"env"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"image"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"resources"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"selector"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"serviceaccount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"subject"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl kruise set env cloneset/nginx STORAGE_DIR=/local\n\n$ kubectl kruise set image cloneset/nginx busybox=busybox nginx=nginx:1.9.1\n")),(0,r.kt)("h3",{id:"migrate"},"migrate"),(0,r.kt)("p",null,"Currently it supports migrate from Deployment to CloneSet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Create an empty CloneSet from an existing Deployment.\n$ kubectl kruise migrate CloneSet --from Deployment -n default --dst-name deployment-name --create\n\n# Create a same replicas CloneSet from an existing Deployment.\n$ kubectl kruise migrate CloneSet --from Deployment -n default --dst-name deployment-name --create --copy\n\n# Migrate replicas from an existing Deployment to an existing CloneSet.\n$ kubectl-kruise migrate CloneSet --from Deployment -n default --src-name cloneset-name --dst-name deployment-name --replicas 10 --max-surge=2\n")),(0,r.kt)("h3",{id:"exec"},"exec"),(0,r.kt)("p",null,"Support switch to raw terminal mode, sends stdin to 'bash' in working sidecar container from cloneset myclone or pod and sends stdout/stderr from 'bash' back to the client"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# exec sidecar in pod\n$ kubectl kruise exec mypod -S sidecar-container -i -t -- bash\n")),(0,r.kt)("h3",{id:"scaledown"},"scaledown"),(0,r.kt)("p",null,"Scaledown a cloneset with selective Pods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Scale down 2 with  selective pods\n$ kubectl kruise scaledown cloneset/nginx --pods pod-a,pod-b\n")),(0,r.kt)("p",null,"It will decrease ",(0,r.kt)("strong",{parentName:"p"},"replicas=replicas-2")," of this cloneset and delete the specified pods."))}k.isMDXComponent=!0}}]);