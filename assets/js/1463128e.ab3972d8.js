"use strict";(self.webpackChunkopenkruise_io=self.webpackChunkopenkruise_io||[]).push([[5413],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),i=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=i(a),m=r,h=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=a[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2929:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return m}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=a(5488),s=a(5162),u=["components"],i={},p="Basic Usage Guide",c={unversionedId:"user-manuals/basic-usage",id:"user-manuals/basic-usage",title:"Basic Usage Guide",description:"This docs focuses on how to make Kruise Rollout effective and how to make a complete release, and answer some questions about usages.",source:"@site/rollouts/user-manuals/basic-usage.md",sourceDirName:"user-manuals",slug:"/user-manuals/basic-usage",permalink:"/rollouts/user-manuals/basic-usage",draft:!1,tags:[],version:"current",lastUpdatedBy:"Zhen Zhang",lastUpdatedAt:1708579440,formattedLastUpdatedAt:"2/22/2024",frontMatter:{},sidebar:"rollouts",previous:{title:"API Specifications",permalink:"/rollouts/user-manuals/api-specifications"},next:{title:"Canary Release",permalink:"/rollouts/user-manuals/strategy-canary-update"}},d={},m=[{value:"A Complete Release Process",id:"a-complete-release-process",level:2},{value:"Step 0: Requirements",id:"step-0-requirements",level:3},{value:"Step 1: Prepare and apply Rollout configuration",id:"step-1-prepare-and-apply-rollout-configuration",level:3},{value:"Step 2: Upgrade Deployment to &quot;version-2&quot; and release the 1-st batch",id:"step-2-upgrade-deployment-to-version-2-and-release-the-1-st-batch",level:3},{value:"Step 3: Continue to release the 2-nd batch",id:"step-3-continue-to-release-the-2-nd-batch",level:3},{value:"Step 4: Continue to release the 3-rd batch",id:"step-4-continue-to-release-the-3-rd-batch",level:3},{value:"How to continue the next step manually?",id:"how-to-continue-the-next-step-manually",level:2},{value:"How to know current step is Ready?",id:"how-to-know-current-step-is-ready",level:2},{value:"How to do rollback?",id:"how-to-do-rollback",level:2},{value:"1. Apply your old version yaml to kubernetes",id:"1-apply-your-old-version-yaml-to-kubernetes",level:3},{value:"2. Gitops sync old revision",id:"2-gitops-sync-old-revision",level:3},{value:"Other Statements",id:"other-statements",level:2}],h={toc:m};function k(e){var t=e.components,i=(0,r.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"basic-usage-guide"},"Basic Usage Guide"),(0,o.kt)("p",null,"This docs focuses on how to make Kruise Rollout effective and how to make a complete release, and answer some questions about usages."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note: v1beta1 available from Kruise Rollout v0.5.0.")),(0,o.kt)("h2",{id:"a-complete-release-process"},"A Complete Release Process"),(0,o.kt)("h3",{id:"step-0-requirements"},"Step 0: Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"/rollouts/installation"},"Install")," Kruise Rollouts.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Assume that you ",(0,o.kt)("strong",{parentName:"p"},"already have a Deployment in your Kubernetes cluster")," as follows:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: workload-demo\n  namespace: default\nspec:\n  replicas: 10\n  selector:\n    matchLabels:\n      app: demo\n  template:\n    metadata:\n      labels:\n        app: demo\n    spec:\n      containers:\n      - name: busybox\n        image: busybox:latest\n        command: ["/bin/sh", "-c", "sleep 100d"]\n        env:\n        - name: VERSION\n          value: "version-1"\n')),(0,o.kt)("h3",{id:"step-1-prepare-and-apply-rollout-configuration"},"Step 1: Prepare and apply Rollout configuration"),(0,o.kt)("p",null,'Assume that you want to use multi-batch update strategy to upgrade your Deployment from "version-1" to "version-2":'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In the 1-st batch: ",(0,o.kt)("strong",{parentName:"li"},"Only 1")," Pod should be upgraded;"),(0,o.kt)("li",{parentName:"ul"},"In the 2-nd batch: ",(0,o.kt)("strong",{parentName:"li"},"50%")," Pods should be upgraded, i.e., ",(0,o.kt)("strong",{parentName:"li"},"5 updated Pods"),";"),(0,o.kt)("li",{parentName:"ul"},"In the 3-rd batch: ",(0,o.kt)("strong",{parentName:"li"},"100%")," Pods should be upgradedm i.e., ",(0,o.kt)("strong",{parentName:"li"},"10 updated Pods"),".")),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"v1beta1",label:"v1beta1",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f - <<EOF\napiVersion: rollouts.kruise.io/v1beta1\nkind: Rollout\nmetadata:\n  name: rollouts-demo\n  namespace: default\nspec:\n  workloadRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: workload-demo\n  strategy:\n    canary:\n      steps:\n      - replicas: 1\n      - replicas: 50%\n      - replicas: 100%\nEOF\n"))),(0,o.kt)(s.Z,{value:"v1alpha1",label:"v1alpha1",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl apply -f - <<EOF\napiVersion: rollouts.kruise.io/v1alpha1\nkind: Rollout\nmetadata:\n  name: rollouts-demo\n  namespace: default\n  annotations:\n    rollouts.kruise.io/rolling-style: partition\nspec:\n  objectRef:\n    workloadRef:\n      apiVersion: apps/v1\n      kind: Deployment\n      name: workload-demo\n  strategy:\n    canary:\n      steps:\n      - replicas: 1\n      - replicas: 50%\n      - replicas: 100%\nEOF\n")))),(0,o.kt)("h3",{id:"step-2-upgrade-deployment-to-version-2-and-release-the-1-st-batch"},'Step 2: Upgrade Deployment to "version-2" and release the 1-st batch'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl patch deployment workload-demo -p \\\n\'{"spec":{"template":{"spec":{"containers":[{"name":"busybox", "env":[{"name":"VERSION", "value":"version-2"}]}]}}}}\'\n')),(0,o.kt)("p",null,"Wait a while, we will see the Deployment status show ",(0,o.kt)("strong",{parentName:"p"},"Only 1 Pod")," is upgraded.\n",(0,o.kt)("img",{src:a(1938).Z,width:"1612",height:"370"})),(0,o.kt)("h3",{id:"step-3-continue-to-release-the-2-nd-batch"},"Step 3: Continue to release the 2-nd batch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl-kruise rollout approve rollout/rollouts-demo -n default\n")),(0,o.kt)("p",null,"Note: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/openkruise/kruise-tools"},"kubectl-kruise")," is also provided by OpenKruise community."),(0,o.kt)("p",null,"Wait a while, we will see the Deployment status show ",(0,o.kt)("strong",{parentName:"p"},"5 Pod")," is upgraded.\n",(0,o.kt)("img",{src:a(6337).Z,width:"1600",height:"430"})),(0,o.kt)("h3",{id:"step-4-continue-to-release-the-3-rd-batch"},"Step 4: Continue to release the 3-rd batch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl-kruise rollout approve rollout/rollouts-demo -n default\n")),(0,o.kt)("p",null,"Wait a while, we will see the Deployment status show all ",(0,o.kt)("strong",{parentName:"p"},"10 Pod")," is upgraded.\n",(0,o.kt)("img",{src:a(9822).Z,width:"1560",height:"394"})),(0,o.kt)("h2",{id:"how-to-continue-the-next-step-manually"},"How to continue the next step manually?"),(0,o.kt)("p",null,"Currently, there are two methods. For example, ",(0,o.kt)("strong",{parentName:"p"},"if you have completed the first batch and want to send the second batch:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Method one:")," You can set the ",(0,o.kt)("inlineCode",{parentName:"li"},"pause.duration")," field of the first batch to ",(0,o.kt)("inlineCode",{parentName:"li"},"duration:0"),", which will automatically enter the next batch."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Method two:")," You can update the ",(0,o.kt)("inlineCode",{parentName:"li"},"rollout.status.canaryStatus.currentStepState")," field to ",(0,o.kt)("inlineCode",{parentName:"li"},'"StepReady"'),", which will also automatically enter the next batch.")),(0,o.kt)("p",null,"Each method has its own ",(0,o.kt)("strong",{parentName:"p"},"advantages")," and ",(0,o.kt)("strong",{parentName:"p"},"disadvantages"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"For method one"),", it can ensure the idempotence of your operation, but you need to reset the strategy of the rollout back to its original state (e.g., reset the duration field to nil) before the next release.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: Rollout\nspec:\n  strategy:\n    canary:\n      steps:\n      - replicas: 1\n        pause:\n          duration: 0\n      - ... ...\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"For method two"),", you don't need to change anything before the next release. However, before confirming, you need to check the status of Rollout and use the update interface instead of the patch interface of Kubernetes client, or use our  ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/openkruise/kruise-tools"},"kubectl-kruise")," tools.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl-kruise rollout approve rollout/<your-rollout-name> -n <your-rollout-namespace>\n")),(0,o.kt)("h2",{id:"how-to-know-current-step-is-ready"},"How to know current step is Ready?"),(0,o.kt)("p",null,"All status information about current step is recorded in ",(0,o.kt)("inlineCode",{parentName:"p"},"status.canaryStatus")," field of Rollout:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"if ",(0,o.kt)("inlineCode",{parentName:"li"},"status.canaryStatus.CurrentStepIndex")," does not equal to your expected step index, the current step is ",(0,o.kt)("strong",{parentName:"li"},"NOT")," ready."),(0,o.kt)("li",{parentName:"ul"},"if ",(0,o.kt)("inlineCode",{parentName:"li"},"status.canaryStatus.CurrentStepState"),' does not equal to "StepReady" or "Complete", the current step is ',(0,o.kt)("strong",{parentName:"li"},"NOT")," ready.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func IsRolloutCurrentStepReady(rollout *rolloutsv1beta1.Rollout, stepIndex int32) bool {\n    if rollout.Status.CanaryStatus != nil {\n        if rollout.Status.CanaryStatus.CurrentStepIndex != stepIndex {\n            return false\n        }\n        switch rollout.Status.CanaryStatus.CurrentSetpState {\n        case "StepReady", "Complete":\n            return true\n        }\n    }\n    return false\n}\n')),(0,o.kt)("p",null,"But in some automatic scenes(e.g. PaaS platform), before judging whether current step is ready, we should know whether the ",(0,o.kt)("inlineCode",{parentName:"p"},"canaryStatus")," is corresponding to the current rollout processes (Maybe it corresponds to the last rollout process).\nWe can use ",(0,o.kt)("inlineCode",{parentName:"p"},"rollout-id")," mechanism to solve this problem."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func IsRolloutCurrentStepReady(workload appsv1.Deployment, rollout *rolloutsv1beta1.Rollout, stepIndex int32) bool {\n    if rollout.Status.CanaryStatus != nil {\n        rolloutId := workload.Labels["rollouts.kruise.io/rollout-id"]\n        if rolloutId != rollout.Status.CanaryStatus.ObservedRolloutID {\n            return false\n        }\n        if rollout.Status.CanaryStatus.CurrentStepIndex != stepIndex {\n            return false\n        }\n        switch rollout.Status.CanaryStatus.CurrentSetpState {\n        case "StepReady", "Complete":\n            return true\n        }\n    }\n    return false\n}\n')),(0,o.kt)("h2",{id:"how-to-do-rollback"},"How to do rollback?"),(0,o.kt)("p",null,"In fact, Kruise Rollout ",(0,o.kt)("strong",{parentName:"p"},"DOES NOT")," provide the ability to rollback directly. ",(0,o.kt)("strong",{parentName:"p"},"Kruise Rollout prefers that users can rollback workload spec directly to rollback their application.")," When users need to rollback from \u201cversion-2\u201d to \u201dversion-1\u201c, Kruise Rollout will use the native rolling upgrade strategy to quickly rollback, instead of following the multi-batch checkpoint strategy."),(0,o.kt)("h3",{id:"1-apply-your-old-version-yaml-to-kubernetes"},"1. Apply your old version yaml to kubernetes"),(0,o.kt)("p",null,"You can refer the ",(0,o.kt)("a",{parentName:"p",href:"https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/use-kruise-rollout-to-perform-canary-releases-and-a-b-testing?spm=a2c4g.11186623.0.0.60f56abdcxjXXM#section-maw-6wb-cql"},"step 6 of document"),"."),(0,o.kt)("h3",{id:"2-gitops-sync-old-revision"},"2. Gitops sync old revision"),(0,o.kt)("p",null,"You can ref the ",(0,o.kt)("a",{parentName:"p",href:"https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/use-cases/using-kruise-rollout-to-implement-canary-release-based-on-ack-one-gitops?spm=a2c4g.11186623.0.0.5ed9474b2PNGPz"},"step 4 of document"),"."),(0,o.kt)("h2",{id:"other-statements"},"Other Statements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Continuous Release"),': Assume that Rollout is progressing from "version-1" to "version-2"(uncompleted). Now, workload is modified to "version-3", Rollout will start to progress from beginning step (1-st step).'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"HPA compatible"),': Assume that you config HPA to your workload and use multi-batch update strategy, we suggest to use "Percent" to specify "steps',"[x]",'.replicas". If replicas is scaled up/down during rollout progressing, the old and new version replicas will be scaled according the "Percent" configuration.')))}k.isMDXComponent=!0},5162:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(7294),r=a(6010),o="tabItem_Ymn6";function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:a},t)}},5488:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(7462),r=a(7294),o=a(6010),l=a(2389),s=a(7392),u=a(7094),i=a(2466),p="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,a,l=e.lazy,d=e.block,m=e.defaultValue,h=e.values,k=e.groupId,f=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=h?h:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,s.l)(y,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===m?m:null!=(t=null!=m?m:null==(a=b.find((function(e){return e.props.default})))?void 0:a.props.value)?t:b[0].props.value;if(null!==v&&!y.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,u.U)(),N=w.tabGroupChoices,S=w.setTabGroupChoices,C=(0,r.useState)(v),O=C[0],R=C[1],x=[],P=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var E=N[k];null!=E&&E!==O&&y.some((function(e){return e.value===E}))&&R(E)}var I=function(e){var t=e.currentTarget,a=x.indexOf(t),n=y[a].value;n!==O&&(P(t),R(n),null!=k&&S(k,String(n)))},T=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,r=x.indexOf(e.currentTarget)+1;a=null!=(n=x[r])?n:x[0];break;case"ArrowLeft":var o,l=x.indexOf(e.currentTarget)-1;a=null!=(o=x[l])?o:x[x.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},f)},y.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return x.push(e)},onKeyDown:T,onFocus:I,onClick:I},l,{className:(0,o.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":O===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(b.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function m(e){var t=(0,l.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},1938:function(e,t,a){t.Z=a.p+"assets/images/basic-1st-batch-2d4dd66aea0d6933125c38b15e35dc8d.jpg"},6337:function(e,t,a){t.Z=a.p+"assets/images/basic-2nd-batch-c101777d8ae2c5b4896022518aae360c.jpg"},9822:function(e,t,a){t.Z=a.p+"assets/images/basic-3rd-batch-8c5da0186f4ebb578c4f44787d1c65aa.jpg"}}]);