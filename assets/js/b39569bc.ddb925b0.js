"use strict";(self.webpackChunkopenkruise_io=self.webpackChunkopenkruise_io||[]).push([[8859],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=c(r),f=a,v=m["".concat(s,".").concat(f)]||m[f]||p[f]||o;return r?n.createElement(v,i(i({ref:t},l),{},{components:r})):n.createElement(v,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},47389:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return p}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],u={},s="Startup Sequence Control",c={unversionedId:"user-manuals/container-startup-sequence-control",id:"user-manuals/container-startup-sequence-control",title:"Startup Sequence Control",description:"Feature overview",source:"@site/kruisegame/user-manuals/container-startup-sequence-control.md",sourceDirName:"user-manuals",slug:"/user-manuals/container-startup-sequence-control",permalink:"/kruisegame/user-manuals/container-startup-sequence-control",draft:!1,tags:[],version:"current",lastUpdatedBy:"skkkkkkk",lastUpdatedAt:1681291192,formattedLastUpdatedAt:"4/12/2023",frontMatter:{},sidebar:"kruisegame",previous:{title:"Gameservers Scale",permalink:"/kruisegame/user-manuals/gameservers-scale"},next:{title:"Service Qualities",permalink:"/kruisegame/user-manuals/service-qualities"}},l={},p=[{value:"Feature overview",id:"feature-overview",level:2},{value:"Examples",id:"examples",level:2}],m={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"startup-sequence-control"},"Startup Sequence Control"),(0,o.kt)("h2",{id:"feature-overview"},"Feature overview"),(0,o.kt)("p",null,"When there are multiple containers in a single game server Pod, sometimes it is necessary to require the startup sequence of the containers, OKG provides the function of custom order startup."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Add KRUISE_CONTAINER_PRIORITY environment variable in GameServerSet.Spec.GameServerTemplate.spec.containers:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'apiVersion: game.kruise.io/v1alpha1\nkind: GameServerSet\n\n# ...\n\nspec:\n  gameServerTemplate:\n    spec:\n      containers:\n      - name: main\n        # ...\n      - name: sidecar\n        env:\n        - name: KRUISE_CONTAINER_PRIORITY\n          value: "1"\n    \n# ...\n\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The value range is ","[-2147483647, 2147483647]",", if not written, the default is 0."),(0,o.kt)("li",{parentName:"ul"},"Containers with high weights are guaranteed to start before containers with low weights."),(0,o.kt)("li",{parentName:"ul"},"Containers of the same weight do not guarantee start order.")),(0,o.kt)("p",null,"In the above example, when the game server starts, because the sidecar has a higher weight, start the sidecar container first, and then start the main container."))}f.isMDXComponent=!0}}]);